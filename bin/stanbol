#!/bin/sh
# Copyright (c) 2012 InsideOut10
# All rights reserved.
#
# Author: David Riccitelli, 2012
#
# /etc/init.d/stanbol
### BEGIN INIT INFO
# Provides:          stanbol
# Required-Start:    $network
# Required-Stop:
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: Apache Stanbol
# Description:       Apache Stanbol provides a wealth of
#		semantic services.
### END INIT INFO
APP_HOME=/opt/stanbol
STANBOL_HOME="/opt/stanbol"
RUN_FOLDER="$STANBOL_HOME/var/run/1"
VERSION="0.10.0-SNAPSHOT"
JAVA_OPTS="-Xmx1g"
JAR="$STANBOL_HOME/bin/stable/launchers/stable/target/org.apache.stanbol.launchers.stable-$VERSION.jar"
CMD="java $JAVA_OPTS -server -jar $JAR"
LABEL="Apache Stanbol"

PID_FILE=/var/run/stanbol.pid

test -d $RUN_FOLDER || { echo "$RUN_FOLDER not found.";
	if [ "$1" = "stop" ]; then exit 0;
	else exit 5; fi; }

test -f $JAR || { echo "$JAR not found.";
	if [ "$1" = "stop" ]; then exit 0;
	else exit 6; fi; }

case "$1" in
    start)
        echo -n "Starting $LABEL "

    `cd $RUN_FOLDER`
	PID=`$CMD > /dev/null 2>&1 & echo $!`

	if [ -z $PID ]; then
		printf "%s\n" "Fail"
	else
		echo $PID > $PID_FILE
		printf "%s\n" "Ok"
	fi

    ;;
    stop)
        echo -n "Shutting down $LABEL "

	if [ -f $PID_FILE ]; then
		PID=`cat $PID_FILE`
		kill -HUP $PID
		printf "%s\n" "Ok"
		rm -f $PID_FILE
	else
		printf "%s\n" "pidfile not found"
	fi
    ;;
    restart)
        ## Stop the service and regardless of whether it was
        ## running or not, start it again.
        $0 stop
        $0 start

        # Remember status and be quiet
    ;;
    status)
        echo -n "Checking for service $LABEL "
	if [ -f $PID_FILE ]; then
		PID=`cat $PID_FILE`
		if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
			printf "%s\n" "Process dead but pidfile exists"
		else
			echo "Running"
		fi
	else
		printf "%s\n" "Service not running"
	fi
    ;;
    *)
        ## If no parameters are given, print which are avaiable.
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac

